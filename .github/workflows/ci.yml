name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run TypeScript compilation check
      run: npx tsc --noEmit

    - name: Run tests
      run: npm test 2>&1 | tee test.log
      env:
        NODE_ENV: test

    - name: Upload test log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-log-${{ matrix.node-version }}
        path: test.log

    - name: Upload Playwright artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-artifacts-${{ matrix.node-version }}
        path: |
          playwright-report
          test-results/**/*.zip
          test-results/**/*.webm
        
    - name: Build application
      run: npm run build
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      continue-on-error: true
      
    - name: Check code formatting
      run: npm run format:check
      continue-on-error: true
