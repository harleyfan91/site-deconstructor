You are an expert full-stack developer working in a Replit environment. Your mission: power the **Tech** tab with real backend data—no JSX/UI changes beyond wiring to existing components.

---
### Must-enable frameworks and services
* **Express** – ensure API endpoints for tech data are defined.
* **Playwright** – headless browser for HTML response headers, `<script>` tags, and DOM scanning.
* **Google PageSpeed Insights (Lighthouse v5)** – reuse relevant audits for security and best-practices where helpful.
* **Wappalyzer-like detection** – leverage existing Wappalyzer or heuristics to detect frameworks/libraries.
* **Supabase** – continue using `analysis_cache` (`url_hash`, `original_url`, `analysis_data`, `created_at`, `expires_at`) for caching tech payloads.

---
### Sections with **known** fallback/dummy data
1. **Tech stack** (`TechStackChips` in `TechTab.tsx`) – currently hard-coded to `['React','Bootstrap']`.
2. **Third-party scripts** (`ThirdPartyScriptsTable`) – defaults to empty list `[]`.
3. **CDN & compression status** (`CompressionStatusCard`) – booleans (`cdn:false`, `gzip:false`).
4. **TLS & security headers** (`TLSSecurityCard`) – defaults (`tlsVersion:'unknown'`, `securityHeaders:[]`).
5. **Social tags** – section unimplemented; needs a `socialTags: string[]` field.
6. **Cookie banner & consent** (`CookieConsentCard` or equivalent) – defaults `hasCookieScript:false`.
7. **Technical issues** (`TechnicalIssuesTable`) – falls back to empty array.
8. **CWVRepeat** – if no UI import exists for core-web-vitals here, comment out related backend code and add `// CWVRepeat not wired to frontend`.
9. **Fallback markers** – replace any server-side `|| []`, `|| false`, `|| 'unknown'`, or literal defaults with the string literal `"!"` to highlight missing data.

---
### For any other Tech tab fields
* Determine if each data point is populated by the API; if not, implement scraping or PSI fetch logic on the backend.

---
### Deliverables for the AI agent
* Extend backend routes/services to extract and return under `analysis_data.technical` and `analysis_data.adTags`:
  - **tech.stack**: real framework list.
  - **tech.thirdPartyScripts**: list of external script URLs.
  - **tech.cdn** & **tech.gzip**: booleans from response headers.
  - **tech.tlsVersion** & **tech.securityHeaders**: TLS info and HSTS/X-Frame-Options, etc.
  - **tech.socialTags**: social metadata tags detected.
  - **technicals.cookies.hasCookieScript**: boolean if cookie scripts present.
  - **technical.issues**: array of issue objects from Lighthouse or custom audits.
* Integrate Supabase caching for all tech data with appropriate TTLs.
* Replace all dummy or fallback outputs with `"!"` in the JSON response.
* Comment out any CWVRepeat backend logic if the frontend doesn’t render it, noting `// CWVRepeat not wired to frontend`.
* Provide code diffs only; the agent decides specific file paths and route names.
